package components

templ Base(title string) {
  <!doctype html>
  <html>
  <head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link href="/static/css/main.css" rel="stylesheet"/>
    <title>{ title }</title>
  </head>
  <body class="bg-slate-700 text-base text-slate-200 leading-[2rem] tracking-wide shadow-none">
    { children... }
  </body>
  </html>
}

templ HomeLayout(title string, contents templ.Component) {
  @Base(title) {
    <div class="flex flex-col justify-between items-center">
      @contents
    </div>
  }
}

templ ContentLayout(title string, contents templ.Component, portals []templ.Component) {
  @Base(title) {
    <header class="flex flex-col justify-center items-start m-auto w-[45%] max-w-[64em] pt-24 pr-4 pb-4">
      <h1 class="text-3xl mb-2 opacity-60 ">{ title }</h1>
    </header>
    <main class="m-auto w-[45%] max-w-[64em]">
      <article class="flex flex-col justify-center items-start w-full leading-[2em] tracking-[2px]">
        @contents
      </article>
      <nav class="flex flex-col justify-center items-center text-center my-[1em] mx-auto">
        <hr class="my-4 bg-transparent w-1/2 border border-solid opacity-30" />
        <p class="inline ">
        for i, portal := range portals {
          @portal
          if i != len(portals) - 1 {
            &centerdot;
          }
        }
        </p>
      </nav>
    </main>
    <footer class="w-full flex justify-center items-center text-center bg-transparent relative bottom-0 p-4 text-base opacity-80">
      Works like a portal. 
    </footer>
  }
}