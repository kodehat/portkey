name: Build and release binaries

on:
  release:
    types: [ created ]

jobs:
  releases-matrix:
    name: Build and release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]
        go-version: [ '1.25' ]
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Build assets
      uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
      with:
        node-version: 24
        cache: 'npm'
    - run: echo "Building assets for ${{ github.ref_name }}"
    - run: npm install
    - run: npm run build

    - name: Compile templates
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version: ${{ matrix.go-version }}
        cache: false
    - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: |
          ~/.cache/go-build
          ~/go
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go install github.com/a-h/templ/cmd/templ@v0.3.943 && templ generate

    - name: Build and upload binaries
      uses: wangyoucao577/go-release-action@2aa2977ad6a4534f9179e22bd0ff146a1e1d3466 # v1.52
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: go.mod
        binary_name: portkey
        pre_command: export CGO_ENABLED=0
        asset_name: "portkey-${{ matrix.goos }}-${{ matrix.goarch }}"
        extra_files: LICENSE.txt README.md
        md5sum: false
        overwrite: true
        build_command: sh build.sh -v "${{ github.ref_name }}"
